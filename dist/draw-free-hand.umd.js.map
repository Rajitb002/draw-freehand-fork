{"version":3,"file":"draw-free-hand.umd.js","sources":["../src/Freehand.js"],"sourcesContent":["\r\nexport default class Freehand {\r\n\r\n  #canvas = null\r\n\r\n  #isDrawing = false\r\n\r\n  #penSize = null\r\n\r\n  #penColor = null\r\n\r\n  #penType = null\r\n\r\n  #penOpacity = null\r\n\r\n  #penFlow = null\r\n\r\n  #penHardness = null\r\n\r\n  #backgroundColor = null\r\n\r\n  #imageFormat = null\r\n\r\n  #snapShot = null\r\n\r\n  // self uses variables\r\n  #prevMouseX = null\r\n  #prevMouseY = null\r\n\r\n  #ctx = null\r\n\r\n  toolType = null\r\n\r\n  ratio = null\r\n\r\n  #imageFormats = {\r\n    'image/png': 'png',\r\n    'image/jpeg': 'jpg'\r\n  }\r\n\r\n  #pathArr = []\r\n\r\n  #countIndex\r\n\r\n  constructor(canvas, options = {}) {\r\n    try {\r\n\r\n      if (typeof canvas === 'string') {\r\n        this.#canvas = this.#select(canvas)\r\n      } else {\r\n        this.#canvas = canvas\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Please provide canvas selector or canvas element')\r\n    }\r\n    this.#canvas.style.cursor = \"url('./img/pen.ico'), crosshair\"\r\n\r\n    this.#setDefaults(options)\r\n\r\n    this.init()\r\n  }\r\n\r\n  #setDefaults(options) {\r\n    this.#penSize = options?.penSize || 3\r\n    this.#penColor = options?.penColor || '#000000'\r\n    this.#penType = options?.penType || 'round'\r\n    this.#penOpacity = options?.penOpacity || 1\r\n    this.#penFlow = options?.penFlow || 1\r\n    this.#penHardness = options?.penHardness || 1\r\n    this.#backgroundColor = options?.backgroundColor || '#ffffff'\r\n    this.toolType = options?.toolType || 'brush' // brush, eraser\r\n    this.#imageFormat = options?.imageFormat || 'image/png'\r\n  }\r\n\r\n  init() {\r\n    this.#prevMouseX = 0\r\n    this.#prevMouseY = 0\r\n    this.#countIndex = -1\r\n    this.#isDrawing = false\r\n\r\n    // call resizeCanvas() on window resize\r\n    window.addEventListener('resize', this.resizeCanvas.bind(this))\r\n    window.addEventListener('load', this.resizeCanvas.bind(this))\r\n\r\n    this.#ctx = this.#canvas.getContext('2d', { willReadFrequently: true })\r\n    this.#ctx.scale(this.ratio, this.ratio)\r\n\r\n    this.#setCanvasBackground()\r\n\r\n    this.#ctx.fillStyle = this.#penColor\r\n\r\n\r\n    this.#canvas.addEventListener('mousedown', this.#startDrawing.bind(this))\r\n    this.#canvas.addEventListener('touchstart', this.#startDrawing.bind(this))\r\n\r\n    this.#canvas.addEventListener('mousemove', this.#draw.bind(this))\r\n    this.#canvas.addEventListener('touchmove', this.#draw.bind(this))\r\n\r\n    this.#canvas.addEventListener('mouseup', this.#stopDrawing.bind(this))\r\n    this.#canvas.addEventListener('touchend', this.#stopDrawing.bind(this))\r\n\r\n    this.#select('#clear')?.addEventListener('click', this.clear)\r\n\r\n    window.addEventListener('keydown', (e) => {\r\n      // for undo with ctrl+z\r\n      if (e.ctrlKey && e.key === 'z') {\r\n        this.undo()\r\n      }\r\n\r\n      // for redo with ctrl+y\r\n      if (e.ctrlKey && e.key === 'y') {\r\n        this.redo()\r\n      }\r\n\r\n      // for download with ctrl+s\r\n      if (e.ctrlKey && e.key === 's') {\r\n        e.preventDefault()\r\n        this.download()\r\n      }\r\n\r\n      // for clear with ctrl+d\r\n      if (e.ctrlKey && e.key === 'd') {\r\n        e.preventDefault()\r\n        this.clear()\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  #select = selector => document.querySelector(selector)\r\n\r\n  resizeCanvas() {\r\n    const ratio = Math.max(window.devicePixelRatio || 1, 1);\r\n    this.#canvas.width = this.#canvas.offsetWidth * ratio;\r\n    this.#canvas.height = this.#canvas.offsetHeight * ratio;\r\n    this.ratio = ratio\r\n  }\r\n\r\n  #setCanvasBackground() {\r\n    // setting whole canvas background to white, so the downloaded img background will be white\r\n    this.#ctx.fillStyle = \"#fff\";\r\n    this.#ctx.fillRect(0, 0, this.#canvas.width, this.#canvas.height);\r\n    this.#ctx.fillStyle = this.#backgroundColor; // setting fillstyle back to the selectedColor, it'll be the brush color\r\n  }\r\n\r\n  #draw(e) {\r\n    if (!this.#isDrawing) return\r\n    this.#ctx.putImageData(this.#snapShot, 0, 0)\r\n    const { clientX, client } = e\r\n\r\n    this.#ctx.strokeStyle = this.toolType === 'brush' ? this.#penColor : this.#backgroundColor\r\n    this.#ctx.lineTo(offsetX, offsetY)\r\n    this.#ctx.stroke()\r\n    this.#ctx.moveTo(offsetX, offsetY)\r\n\r\n    // for straight line\r\n    if (this.toolType === 'line') {\r\n      this.#ctx.beginPath()\r\n      this.#ctx.moveTo(this.#prevMouseX, this.#prevMouseY)\r\n      this.#ctx.lineTo(offsetX, offsetY)\r\n      this.#ctx.stroke()\r\n    }\r\n\r\n  }\r\n\r\n  #stopDrawing() {\r\n    this.#isDrawing = false\r\n    this.#ctx.beginPath()\r\n    this.#storePaths()\r\n  }\r\n\r\n  #startDrawing(e) {\r\n    this.#isDrawing = true\r\n    // set line color\r\n    this.#ctx.strokeStyle = this.#penColor\r\n    // set line cap\r\n    this.#ctx.lineCap = this.#penType\r\n    // set line opacity\r\n    this.#ctx.globalAlpha = this.#penOpacity\r\n    // set line flow\r\n    this.#ctx.globalCompositeOperation = this.#penFlow\r\n    // set line hardness\r\n    this.#ctx.miterLimit = this.#penHardness\r\n\r\n    // set previous mouse position\r\n    this.#prevMouseX = e.offsetX\r\n    this.#prevMouseY = e.offsetY\r\n\r\n    // set line width\r\n    this.#ctx.lineWidth = this.#penSize\r\n\r\n    // set line color\r\n    this.#ctx.strokeStyle = this.#penColor\r\n    this.#ctx.fillStyle = this.#backgroundColor\r\n\r\n    // set line cap\r\n    this.#snapShot = this.#ctx.getImageData(0, 0, this.#canvas.width, this.#canvas.height)\r\n    // create new path\r\n    this.#ctx.beginPath()\r\n\r\n    this.#draw(e)\r\n  }\r\n\r\n  #storePaths() {\r\n    this.#pathArr.push(this.#ctx.getImageData(0, 0, this.#canvas.width, this.#canvas.height))\r\n    this.#countIndex += 1\r\n  }\r\n\r\n  clear() {\r\n    if (this.#pathArr.length === 0) return\r\n    this.#ctx.clearRect(0, 0, this.#canvas.width, this.#canvas.height)\r\n    this.#setCanvasBackground()\r\n    this.#pathArr = []\r\n    this.#countIndex = -1\r\n  }\r\n\r\n  undo() {\r\n    if (this.#countIndex <= 0) {\r\n      this.clear()\r\n      return\r\n    }\r\n    this.#countIndex -= 1\r\n    // this.#pathArr.pop()\r\n    this.#ctx.putImageData(this.#pathArr[this.#countIndex], 0, 0)\r\n  }\r\n\r\n  redo() {\r\n    if (this.#countIndex >= this.#pathArr.length - 1) {\r\n      return\r\n    }\r\n    this.#countIndex += 1\r\n    this.#ctx.putImageData(this.#pathArr[this.#countIndex], 0, 0)\r\n  }\r\n\r\n  setToolType(toolType) {\r\n    this.toolType = toolType\r\n  }\r\n\r\n  setPenSize(size) {\r\n    this.#penSize = size\r\n  }\r\n\r\n  setPenColor(color) {\r\n    this.#penColor = color\r\n  }\r\n\r\n  setPenType(type) {\r\n    this.#penType = type\r\n  }\r\n\r\n  setPenOpacity(opacity) {\r\n    this.#penOpacity = opacity\r\n  }\r\n\r\n  setPenFlow(flow) {\r\n    this.#penFlow = flow\r\n  }\r\n\r\n  setPenHardness(hardness) {\r\n    this.#penHardness = hardness\r\n  }\r\n\r\n  setBackgroundColor(color) {\r\n    this.#backgroundColor = color\r\n  }\r\n\r\n  setImageFormat(imageFormat) {\r\n    this.#imageFormat = imageFormat\r\n  }\r\n\r\n  getImageString() {\r\n    return this.#canvas.toDataURL(this.#imageFormat)\r\n  }\r\n\r\n  download(filename) {\r\n    const data = this.getImageString()\r\n    const blob = this.#dataURLToBlob(data)\r\n    const url = window.URL.createObjectURL(blob)\r\n\r\n    const a = document.createElement(\"a\");\r\n    a.style = \"display: none\";\r\n    a.download = Date.now() + '.' + this.#imageFormats[this.#imageFormat]; // passing current date as link download value\r\n    a.href = url\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  }\r\n\r\n  #dataURLToBlob(dataURL) {\r\n    const parts = dataURL.split(';base64,');\r\n    const contentType = parts[0].split(\":\")[1];\r\n    const raw = window.atob(parts[1]);\r\n    const rawLength = raw.length;\r\n    const uInt8Array = new Uint8Array(rawLength);\r\n\r\n    for (let i = 0; i < rawLength; ++i) {\r\n      uInt8Array[i] = raw.charCodeAt(i);\r\n    }\r\n\r\n    return new Blob([uInt8Array], { type: contentType });\r\n  }\r\n\r\n  #download(dataURL, filename) {\r\n    const blob = dataURLToBlob(dataURL);\r\n    const url = window.URL.createObjectURL(blob);\r\n\r\n    imageUrl.href = url\r\n    imageUrl.innerText = filename\r\n\r\n    const a = document.createElement(\"a\");\r\n    a.style = \"display: none\";\r\n    a.href = url;\r\n    a.download = filename;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  }\r\n\r\n  destroy() {\r\n    this.#canvas = null\r\n    this.#isDrawing = null\r\n    this.#ctx = null\r\n  }\r\n\r\n  // events\r\n  addEventListener(event, callback) {\r\n    this.#canvas.addEventListener(event, callback)\r\n  }\r\n\r\n  getCanvasData() {\r\n    return this.#canvas.toDataURL(this.#imageFormat)\r\n  }\r\n}\r\n"],"names":["canvas","isDrawing","penSize","penColor","penType","penOpacity","penFlow","penHardness","backgroundColor","imageFormat","snapShot","prevMouseX","prevMouseY","ctx","toolType","ratio","imageFormats","pathArr","countIndex","constructor","options","this","select","error","console","style","cursor","setDefaults","init","window","addEventListener","resizeCanvas","bind","getContext","willReadFrequently","scale","setCanvasBackground","fillStyle","startDrawing","draw","stopDrawing","clear","e","ctrlKey","key","undo","redo","preventDefault","download","selector","document","querySelector","Math","max","devicePixelRatio","width","offsetWidth","height","offsetHeight","fillRect","putImageData","strokeStyle","lineTo","offsetX","offsetY","stroke","moveTo","beginPath","storePaths","lineCap","globalAlpha","globalCompositeOperation","miterLimit","lineWidth","getImageData","push","length","clearRect","setToolType","setPenSize","size","setPenColor","color","setPenType","type","setPenOpacity","opacity","setPenFlow","flow","setPenHardness","hardness","setBackgroundColor","setImageFormat","getImageString","toDataURL","filename","data","blob","dataURLToBlob","url","URL","createObjectURL","a","createElement","Date","now","href","body","appendChild","click","revokeObjectURL","dataURL","parts","split","contentType","raw","atob","rawLength","uInt8Array","Uint8Array","i","charCodeAt","Blob","imageUrl","innerText","destroy","event","callback","getCanvasData"],"mappings":"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"}